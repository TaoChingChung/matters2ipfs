{"version":3,"sources":["public-cors.js","utils/index.js","components/SnackBarContent.js","public-gateway.js","Home.js","utils/api.js","App.js","serviceWorker.js","index.js"],"names":["public_cors","url","needEncode","isValidUrl","string","URL","_","getHash","indexOf","urlObj","routeMatchResult","Route","match","pathname","id","matchResult","split","getMattersHash","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","options","corsIndex","finalCorsIndex","theCorsApi","query","mattersUrl","endpoint","config","data","wrap","_context","prev","next","mediaHash","publicCors","length","Math","floor","random","cors","corsNeedEncode","concat","encodeURIComponent","assign","axios","get","sent","status","abrupt","Error","stop","_x","apply","this","arguments","variantIcon","success","CheckCircleIcon","warning","WarningIcon","error","ErrorIcon","info","InfoIcon","useStyles1","makeStyles","theme","backgroundColor","green","palette","dark","primary","main","amber","icon","fontSize","iconVariant","opacity","marginRight","spacing","message","display","alignItems","MySnackbarContentWrapper","props","classes","className","onClose","variant","other","objectWithoutProperties","Icon","react_default","createElement","SnackbarContent","clsx","aria-describedby","action","IconButton","key","aria-label","color","onClick","Close_default","public_gateway","useStyles","root","paddingBottom","button","marginTop","marginBottom","buttonGrow","flexGrow","buttonBox","input","buttonIcon","formControl","minWidth","listItem","wordBreak","buttonSplit","flex","legend","loading","margin","justifyContent","divider","close","padding","heroContent","buttonRight","marginLeft","space","priButton","center","centerButton","overAvatar","paddingRight","subheader","top","zIndex","position","inputRoot","defineProperty","width","height","resultId","Home","searchParams","URLSearchParams","window","location","search","searchUrl","checkedCorsApi","mattersCors","mattersCorsNeedEncode","mattersCorsIndex","_useState","useState","_useState2","slicedToArray","isLoading","setLoading","_useState3","_useState4","setUrl","_useState5","_useState6","setMediaHash","_useState7","_useState8","hash","setHash","_useState9","_useState10","autoConvert","setAutoConvert","_useState11","count","checkedCount","onlineCount","offlineCount","_useState12","checkedStat","setCheckedStat","_useState13","_useState14","checkedMap","setCheckedMap","getUrlError","_useState15","_useState16","open","setOpen","_useState17","_useState18","openError","setOpenError","_useState19","_useState20","isInit","setIsInit","_useState21","_useState22","urlError","setUrlError","_useState23","_useState24","errorMessage","setErrorMessage","handleChangeHash","currentHash","currentCheckedMap","i","gateways","gatewayAndHash","replace","displayUrl","requestUrl","keys","prevCheckedStat","forEach","item","start","Date","now","currentResultId","then","result","JSON","stringify","catch","response","spend","currentCheckedStat","prevCheckedMap","checkedMapState","timeout","e","handleChangeUrl","currentUrl","target","value","isUrlError","handleClose","event","reason","handleCloseError","handleConvert","_ref2","mattersParams","mattersResult","dataHash","Number","article","t0","handleClickCopy","useEffect","currentPageAutoLink","protocol","host","Container","maxWidth","Typography","component","align","gutterBottom","Link","href","rel","FormGroup","TextField","required","autoFocus","inputProps","autoComplete","label","type","placeholder","onChange","helperText","row","Button","size","disabled","CircularProgress","ImportExport","Divider","List","aria-labelledby","ListSubheader","dense","map","index","ListItem","ListItemAvatar","AccessTime","HighlightOff","index_es","ListItemText","primaryTypographyProps","secondary","ListItemSecondaryAction","lib","text","onCopy","edge","Paper","InputBase","iconButton","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","flexDirection","minHeight","background","paper","grow","menuButton","link","title","footer","paddingTop","borderTop","lineHeight","flexWrap","ButtonAppBar","Fragment","CssBaseline","style","Home_Home","Boolean","hostname","createMuiTheme","ReactDOM","render","ThemeProvider","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d7807ce8.chunk.js","sourcesContent":["// avaliable cors proxy:\n// https://ovsoinc.github.io/yacdn.org/\n// https://jsonp.afeld.me/\nexport default [\n  {\n    url: \"https://cors-anywhere.herokuapp.com/\"\n  }, // 2.79s, too many use, may be slowly\n  //   {\n  //     url: \"https://thingproxy.freeboard.io/fetch/\"\n  //   }, // 2.98s can't use at production, 401 when matters2ipfs.js.org\n  {\n    url: \"https://api.allorigins.win/raw?url=\",\n    needEncode: true\n  }, // 2.02s\n  {\n    url: \"https://jsonp.afeld.me/?url=\",\n    needEncode: true\n  } // 4.01s\n];\n","import axios from \"axios\";\nimport publicCors from \"../public-cors\";\nimport Route from \"route-parser\";\n\nexport { api } from \"./api\";\n\nexport function getExtname(filename) {\n  const ext = filename.split(\".\").pop();\n  if (ext) {\n    return `.${ext}`;\n  }\n}\nexport const isValidUrl = string => {\n  if (!string) {\n    return true;\n  }\n  try {\n    new URL(string);\n    return true;\n  } catch (_) {\n    return false;\n  }\n};\nexport const getHash = url => {\n  if (url.indexOf(\"matters.news\") < 0) {\n    return \"\";\n  }\n  const urlObj = new URL(url);\n  const detailRoute = new Route(\"/@:author/:id\");\n  const routeMatchResult = detailRoute.match(urlObj.pathname);\n  if (routeMatchResult && routeMatchResult.id) {\n    const matchResult = routeMatchResult.id.match(/.+-(.+)/);\n    if (matchResult && matchResult[1]) {\n      const hashResult = matchResult[1];\n      // check is inclue hash\n      const hash = hashResult.split(\"#\")[0];\n      return hash;\n    } else {\n      return \"\";\n    }\n  } else {\n    return \"\";\n  }\n};\nexport const getMattersHash = async options => {\n  if (options && options.mediaHash) {\n    // getRandom cors server\n    const corsIndex = options.corsIndex;\n    const finalCorsIndex =\n      corsIndex >= 0 && corsIndex < publicCors.length\n        ? corsIndex\n        : Math.floor(Math.random() * publicCors.length);\n    const theCorsApi = options.cors\n      ? { url: options.cors, needEncode: options.corsNeedEncode }\n      : publicCors[finalCorsIndex];\n    const mattersEndpoint = \"https://server.matters.news/graphql\";\n    const query = /* GraphQL */ `\n    query {\n      article(input: { mediaHash: \"${options.mediaHash}\" }) {\n        dataHash\n      }\n    }\n  `;\n    const mattersUrl = `${mattersEndpoint}?query=${encodeURIComponent(query)}`;\n    let endpoint = `${theCorsApi.url}${mattersUrl}`;\n\n    if (theCorsApi.needEncode) {\n      endpoint = `${theCorsApi.url}${encodeURIComponent(mattersUrl)}`;\n    }\n    const config = Object.assign({}, options.config);\n    const data = await axios.get(endpoint, config);\n    if (data.status === 200 && data.data && data.data.data) {\n      return data.data.data;\n    } else {\n      throw new Error(\n        `Can't get data hash, this may cause by matters server change their api, please let me know.`\n      );\n    }\n  } else {\n    throw new Error(`Can't found mediaHash`);\n  }\n};\n","import React from \"react\";\nimport clsx from \"clsx\";\nimport { amber, green } from \"@material-ui/core/colors\";\nimport ErrorIcon from \"@material-ui/icons/Error\";\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\nimport InfoIcon from \"@material-ui/icons/Info\";\nimport WarningIcon from \"@material-ui/icons/Warning\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport SnackbarContent from \"@material-ui/core/SnackbarContent\";\nconst variantIcon = {\n  success: CheckCircleIcon,\n  warning: WarningIcon,\n  error: ErrorIcon,\n  info: InfoIcon\n};\n\nconst useStyles1 = makeStyles(theme => ({\n  success: {\n    backgroundColor: green[600]\n  },\n  error: {\n    backgroundColor: theme.palette.error.dark\n  },\n  info: {\n    backgroundColor: theme.palette.primary.main\n  },\n  warning: {\n    backgroundColor: amber[700]\n  },\n  icon: {\n    fontSize: 20\n  },\n  iconVariant: {\n    opacity: 0.9,\n    marginRight: theme.spacing(1)\n  },\n  message: {\n    display: \"flex\",\n    alignItems: \"center\"\n  }\n}));\n\nexport default function MySnackbarContentWrapper(props) {\n  const classes = useStyles1();\n  const { className, message, onClose, variant, ...other } = props;\n  const Icon = variantIcon[variant];\n\n  return (\n    <SnackbarContent\n      className={clsx(classes[variant], className)}\n      aria-describedby=\"client-snackbar\"\n      message={\n        <span id=\"client-snackbar\" className={classes.message}>\n          <Icon className={clsx(classes.icon, classes.iconVariant)} />\n          {message}\n        </span>\n      }\n      action={[\n        <IconButton\n          key=\"close\"\n          aria-label=\"Close\"\n          color=\"inherit\"\n          onClick={onClose}\n        >\n          <CloseIcon className={classes.icon} />\n        </IconButton>\n      ]}\n      {...other}\n    />\n  );\n}\n","export default [\n  \"https://ninetailed.ninja/ipfs/:hash\",\n  \"https://ipfs.eternum.io/ipfs/:hash\",\n  \"https://hardbin.com/ipfs/:hash\",\n  \"https://gateway.pinata.cloud/ipfs/:hash\",\n  \"https://siderus.io/ipfs/:hash\",\n  \"https://ipfstube.erindachtler.me/ipfs/:hash\",\n  \"https://ipfs.io/ipfs/:hash\",\n  \"https://gateway.ipfs.io/ipfs/:hash\",\n  \"https://ipfs.infura.io/ipfs/:hash\",\n\n  \"https://ipfs.privacytools.io/ipfs/:hash\",\n  \"https://d26g9c7mfuzstv.cloudfront.net/ipfs/:hash\",\n  \"https://eu.siderus.io/ipfs/:hash\",\n  \"https://na.siderus.io/ipfs/:hash\",\n  \"https://ap.siderus.io/ipfs/:hash\",\n\n  \"https://ipfs.wa.hle.rs/ipfs/:hash\",\n  \"https://ipfs.sloppyta.co/ipfs/:hash\",\n  \"https://ipfs.busy.org/ipfs/:hash\",\n  \"https://ipfs.greyh.at/ipfs/:hash\",\n  \"https://gateway.serph.network/ipfs/:hash\",\n  \"https://ipfs.fooock.com/ipfs/:hash\",\n  \"https://cdn.cwinfo.net/ipfs/:hash\",\n\n  \"https://gateway.temporal.cloud/ipfs/:hash\",\n  \"https://ipfs.jes.xxx/ipfs/:hash\",\n  \"https://cloudflare-ipfs.com/ipfs/:hash\",\n\n  \"https://upload.global/ipfs/:hash\",\n  \"https://catalunya.network/ipfs/:hash\",\n  \"https://ipfs.works/ipfs/:hash\",\n  \"https://api.wisdom.sh/ipfs/:hash\",\n  \"https://ipfs.macholibre.org/ipfs/:hash\",\n  \"https://ipns.co/:hash\",\n  \"https://ipfs.netw0rk.io/ipfs/:hash\",\n  \"https://gateway.swedneck.xyz/ipfs/:hash\",\n  \"https://ipfs.mrh.io/ipfs/:hash\",\n  \"https://gateway.originprotocol.com/ipfs/:hash\",\n  \"https://ipfs.dapps.earth/ipfs/:hash\",\n  \"https://ipfs.doolta.com/ipfs/:hash\",\n  \"https://rx14.co.uk/ipfs/:hash\",\n  \"https://ipfs.globalupload.io/ipfs/:hash\",\n  \"https://ipfs.renehsz.com/ipfs/:hash\",\n  \"https://gateway.blocksec.com/ipfs/:hash\",\n  \"https://jorropo.ovh/ipfs/:hash\"\n];\n","import React, { useState, useEffect } from \"react\";\nimport {\n  Button,\n  TextField,\n  FormGroup,\n  Typography,\n  Link,\n  List,\n  ListItem,\n  ListItemText,\n  ListItemSecondaryAction,\n  ListSubheader,\n  ListItemAvatar,\n  CircularProgress,\n  IconButton,\n  InputBase,\n  Divider,\n  Snackbar,\n  Container,\n  Paper\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\nimport { CheckCircle, ContentCopy } from \"mdi-material-ui\";\nimport { HighlightOff, ImportExport, AccessTime } from \"@material-ui/icons\";\nimport { api, isValidUrl, getHash, getMattersHash } from \"./utils\";\nimport SnackBarContentWrapper from \"./components/SnackBarContent\";\nimport gateways from \"./public-gateway\";\nimport \"./Home.css\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    paddingBottom: 30\n  },\n  button: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1)\n  },\n  buttonGrow: {\n    flexGrow: 1\n  },\n  buttonBox: {},\n  input: {\n    display: \"none\"\n  },\n  buttonIcon: {\n    marginRight: theme.spacing(1)\n  },\n  formControl: {\n    marginRight: theme.spacing(4),\n    minWidth: 120\n  },\n  listItem: {\n    wordBreak: \"break-all\"\n  },\n  buttonSplit: {\n    flex: 1\n  },\n  legend: {\n    color: \"rgba(0, 0, 0, 0.38)\"\n  },\n  loading: {\n    margin: theme.spacing(4),\n    display: \"flex\",\n    justifyContent: \"center\"\n  },\n  divider: {\n    marginTop: theme.spacing(4),\n    marginBottom: theme.spacing(4)\n  },\n  close: {\n    padding: theme.spacing(0.5)\n  },\n  error: {\n    backgroundColor: \"red\"\n  },\n  heroContent: {\n    padding: theme.spacing(8, 0, 6)\n  },\n  buttonRight: {\n    marginLeft: theme.spacing(4)\n  },\n  space: {\n    marginLeft: theme.spacing(1)\n  },\n  priButton: {\n    justifyContent: \"flex-end\"\n  },\n  center: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  centerButton: {\n    marginTop: theme.spacing(4),\n    justifyContent: \"center\"\n  },\n  overAvatar: {\n    minWidth: 0,\n    paddingRight: theme.spacing(1)\n  },\n  subheader: {\n    top: \"auto\",\n    zIndex: \"auto\",\n    position: \"static\"\n  },\n  inputRoot: {\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(4),\n    padding: \"2px 4px\",\n    display: \"flex\",\n    alignItems: \"center\"\n  },\n  input: {\n    marginLeft: 8,\n    flex: 1\n  },\n  iconButton: {\n    padding: 10\n  },\n  inputDivider: {\n    width: 1,\n    height: 28,\n    margin: 4\n  }\n}));\nlet resultId = 1;\nexport default function Home() {\n  const classes = useStyles();\n  // get search params\n  const searchParams = new URLSearchParams(window.location.search);\n  const searchUrl = searchParams.get(\"url\") || \"\";\n  const checkedCorsApi = searchParams.get(\"checked_cors\") || \"\";\n  const mattersCors = searchParams.get(\"cors\") || \"\";\n  const mattersCorsNeedEncode = searchParams.get(\"cors_need_encode\") || 0;\n  const mattersCorsIndex = searchParams.get(\"cors_index\") || null;\n  const [isLoading, setLoading] = useState(false);\n  const [url, setUrl] = useState(\"\");\n  const [mediaHash, setMediaHash] = useState(\"\");\n  const [hash, setHash] = useState(\"\");\n  const [autoConvert, setAutoConvert] = useState(false);\n  const [checkedStat, setCheckedStat] = useState({\n    id: resultId,\n    count: 0,\n    checkedCount: 0,\n    onlineCount: 0,\n    offlineCount: 0\n  });\n  const [checkedMap, setCheckedMap] = useState({});\n  const getUrlError = url => {\n    return !isValidUrl(url);\n  };\n  const [open, setOpen] = useState(false);\n  const [openError, setOpenError] = useState(false);\n  const [isInit, setIsInit] = useState(false);\n  const [urlError, setUrlError] = useState(getUrlError(url));\n  const [errorMessage, setErrorMessage] = useState(\"\");\n\n  const handleChangeHash = currentHash => {\n    // checkedMap\n    if (currentHash) {\n      // if hash exist\n      const currentCheckedMap = {};\n      for (let i = 0; i < gateways.length; i++) {\n        const gateway = gateways[i];\n        const gatewayAndHash = gateway.replace(\":hash\", currentHash);\n        // opt-out from gateway redirects done by browser extension\n        const corsHost = checkedCorsApi;\n        const displayUrl = corsHost + gatewayAndHash;\n        const requestUrl = displayUrl + \"#x-ipfs-companion-no-redirect\";\n        currentCheckedMap[displayUrl] = {\n          displayUrl: displayUrl,\n          requestUrl: requestUrl,\n          status: \"checking\"\n        };\n      }\n\n      setCheckedMap(currentCheckedMap);\n      const keys = Object.keys(currentCheckedMap);\n      setCheckedStat(prevCheckedStat => {\n        return {\n          count: keys.length,\n          checkedCount: 0,\n          onlineCount: 0,\n          offlineCount: 0\n        };\n      });\n      keys.forEach(key => {\n        const item = currentCheckedMap[key];\n        const start = Date.now();\n        const currentResultId = resultId;\n        api(item.requestUrl)\n          .then(() => {\n            const end = Date.now();\n            const spend = end - start;\n            setCheckedStat(prevCheckedStat => {\n              const currentCheckedStat = Object.assign({}, prevCheckedStat);\n              if (resultId === currentResultId) {\n                currentCheckedStat.checkedCount++;\n                currentCheckedStat.onlineCount++;\n              }\n              return currentCheckedStat;\n            });\n            setCheckedMap(prevCheckedMap => {\n              const checkedMapState = Object.assign({}, prevCheckedMap);\n              if (checkedMapState[key] && resultId === currentResultId) {\n                checkedMapState[key].status = \"online\";\n                checkedMapState[key].timeout = spend;\n              }\n              return checkedMapState;\n            });\n          })\n          .catch(e => {\n            setCheckedStat(prevCheckedStat => {\n              const currentCheckedStat = Object.assign({}, prevCheckedStat);\n              if (resultId === currentResultId) {\n                currentCheckedStat.checkedCount++;\n                currentCheckedStat.offlineCount++;\n              }\n              return currentCheckedStat;\n            });\n            setCheckedMap(prevCheckedMap => {\n              const checkedMapState = Object.assign({}, prevCheckedMap);\n              if (checkedMapState[key] && resultId === currentResultId) {\n                checkedMapState[key].status = \"offline\";\n                checkedMapState[key].error = e.message || \"Timeout!\";\n              }\n              return checkedMapState;\n            });\n          });\n      });\n    }\n  };\n\n  const handleChangeUrl = e => {\n    const currentUrl = e.target.value;\n    const isUrlError = getUrlError(currentUrl);\n    setUrl(currentUrl);\n    setUrlError(isUrlError);\n    if (isUrlError) {\n      setMediaHash(\"\");\n    } else {\n      const currentHash = getHash(currentUrl);\n      setMediaHash(currentHash);\n    }\n  };\n  function handleClose(event, reason) {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    setOpen(false);\n  }\n\n  function handleCloseError(event, reason) {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    setOpenError(false);\n  }\n  function getResults() {\n    const keys = Object.keys(checkedMap);\n    const results = keys.map(key => {\n      return checkedMap[key];\n    });\n    return results;\n  }\n\n  const handleConvert = async () => {\n    if (!mediaHash) {\n      setErrorMessage(`Please input a valid matters article url`);\n      setOpenError(true);\n      return;\n    }\n    resultId++;\n\n    // setloading\n    setLoading(true);\n    setCheckedStat({\n      count: 0,\n      checkedCount: 0,\n      onlineCount: 0,\n      offlineCount: 0\n    });\n    setCheckedMap({});\n    // get hash\n    try {\n      const mattersParams = {\n        mediaHash: mediaHash\n      };\n      if (mattersCors) {\n        mattersParams.cors = mattersCors;\n        if (mattersCorsNeedEncode === \"1\") {\n          mattersParams.corsNeedEncode = true;\n        }\n      } else if (mattersCorsIndex !== null) {\n        mattersParams.corsIndex = Number(mattersCorsIndex);\n      }\n      const mattersResult = await getMattersHash(mattersParams);\n      if (\n        mattersResult &&\n        mattersResult.article &&\n        mattersResult.article.dataHash\n      ) {\n        const { dataHash } = mattersResult.article;\n        setHash(dataHash);\n        handleChangeHash(dataHash);\n      } else if (mattersResult && mattersResult.article === null) {\n        setErrorMessage(\n          `Can't get the matters dataHash, this may cause by your matters url`\n        );\n        setOpenError(true);\n      } else {\n        setErrorMessage(\n          `Can't get the matters dataHash, this may cause by our convert server error`\n        );\n        setOpenError(true);\n      }\n    } catch (error) {\n      setErrorMessage(error.message);\n      setOpenError(true);\n    }\n    setLoading(false);\n  };\n\n  const handleClickRandom = () => {\n    const newUrl =\n      \"https://matters.news/@leungkaichihk/%E9%A6%99%E6%B8%AF%E7%AC%AC%E4%B8%80%E8%AA%B2-%E7%B0%A1%E4%BB%8B%E5%8F%8A%E7%9B%AE%E9%8C%84-zdpuB2J818r8yUSDeZ4vDARrnQ4ut3S2UYjALXHJ16jp25w4P\";\n\n    handleChangeUrl({\n      target: {\n        value: newUrl\n      }\n    });\n    setAutoConvert(true);\n  };\n  const handleClickCopy = () => {\n    setOpen(true);\n  };\n  useEffect(() => {\n    if (!isInit) {\n      setIsInit(true);\n    }\n    if (!isInit && searchUrl) {\n      setAutoConvert(true);\n      handleChangeUrl({\n        target: {\n          value: searchUrl\n        }\n      });\n    } else if (isInit && autoConvert) {\n      setAutoConvert(false);\n      handleConvert();\n    }\n  }, [\n    isInit,\n    searchUrl,\n    autoConvert,\n    setIsInit,\n    setAutoConvert,\n    handleChangeUrl,\n    handleConvert\n  ]);\n  const currentPageAutoLink = `${window.location.protocol}//${\n    window.location.host\n  }/?url=${encodeURIComponent(url)}`;\n  return (\n    <div className={classes.root}>\n      {/* Hero unit */}\n      <div className={classes.heroContent}>\n        <Container maxWidth=\"md\">\n          <Typography\n            component=\"h1\"\n            variant=\"h2\"\n            align=\"center\"\n            color=\"textPrimary\"\n            gutterBottom\n          >\n            Convert{\" \"}\n            <Link\n              href=\"https://matters.news\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              Matters\n            </Link>{\" \"}\n            to{\" \"}\n            <Link\n              href=\"https://contributionls.github.io/public-gateway-checker/\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              IPFS\n            </Link>\n          </Typography>\n        </Container>\n      </div>\n      <FormGroup>\n        <TextField\n          id={`url`}\n          required\n          autoFocus={true}\n          inputProps={{\n            autoComplete: \"off\"\n          }}\n          label={`Matters Article Url`}\n          type=\"url\"\n          placeholder=\"https://matters.news/@leungkaichihk/%E9%A6%99%E6%B8%AF%E7%AC%AC%E4%B8%80%E8%AA%B2-%E7%B0%A1%E4%BB%8B%E5%8F%8A%E7%9B%AE%E9%8C%84-zdpuB2J818r8yUSDeZ4vDARrnQ4ut3S2UYjALXHJ16jp25w4P\"\n          onChange={handleChangeUrl}\n          value={url}\n          variant=\"outlined\"\n          margin=\"normal\"\n          error={urlError}\n          helperText={urlError ? \"URL is invalid!\" : \"\"}\n        />\n        <FormGroup row className={classes.centerButton}>\n          <Button\n            onClick={handleConvert}\n            color=\"primary\"\n            size=\"large\"\n            variant=\"outlined\"\n            disabled={isLoading}\n            className={`${classes.button}`}\n          >\n            {isLoading ? (\n              <CircularProgress\n                size={20}\n                color=\"inherit\"\n                className={classes.buttonIcon}\n              />\n            ) : (\n              <ImportExport fontSize=\"small\" className={classes.buttonIcon} />\n            )}\n            Convert\n          </Button>\n          <Button\n            onClick={handleClickRandom}\n            variant=\"outlined\"\n            color=\"default\"\n            size=\"large\"\n            className={`${classes.button} ${classes.buttonRight}`}\n          >\n            Example\n          </Button>\n        </FormGroup>\n        {hash ? (\n          <div>\n            <Divider className={classes.divider} />\n            <List\n              aria-labelledby=\"nested-list-subheader\"\n              subheader={\n                <ListSubheader\n                  component=\"div\"\n                  className={classes.subheader}\n                  id=\"nested-list-subheader\"\n                >\n                  {checkedStat.checkedCount}/{checkedStat.count} gateways,{\" \"}\n                  {checkedStat.onlineCount} are online,{\" \"}\n                  {checkedStat.offlineCount} are offline\n                </ListSubheader>\n              }\n              dense={false}\n            >\n              {getResults().map((item, index) => {\n                return (\n                  <ListItem key={`key_${index}`}>\n                    <ListItemAvatar\n                      className={`${classes.center} ${classes.overAvatar}`}\n                    >\n                      <div>\n                        {item.status === \"init\" ? (\n                          <AccessTime color=\"disabled\" />\n                        ) : null}\n                        {item.status === \"checking\" ? (\n                          <CircularProgress\n                            size={20}\n                            color=\"secondary\"\n                            className={classes.buttonIcon}\n                          />\n                        ) : null}\n                        {item.status === \"offline\" ? (\n                          <HighlightOff color=\"error\" />\n                        ) : null}\n                        {item.status === \"online\" ? (\n                          <CheckCircle color=\"primary\" />\n                        ) : null}\n                      </div>\n                    </ListItemAvatar>\n                    <ListItemText\n                      primaryTypographyProps={{\n                        className: classes.listItem\n                      }}\n                      primary={\n                        <Link\n                          target=\"_blank\"\n                          rel=\"noopener noreferrer\"\n                          href={item.displayUrl}\n                        >\n                          {item.displayUrl}\n                        </Link>\n                      }\n                      secondary={\n                        item.status === \"offline\"\n                          ? item.error\n                          : item.status === \"online\"\n                          ? `${item.timeout}ms`\n                          : null\n                      }\n                    />\n                    <ListItemSecondaryAction>\n                      <CopyToClipboard\n                        text={item.displayUrl}\n                        onCopy={handleClickCopy}\n                      >\n                        <IconButton edge=\"end\" aria-label=\"copy\">\n                          <ContentCopy />\n                        </IconButton>\n                      </CopyToClipboard>\n                    </ListItemSecondaryAction>\n                  </ListItem>\n                );\n              })}\n            </List>\n            <Divider className={classes.divider} />\n            <Typography variant=\"h5\" component=\"h3\">\n              Want a link that automatically checks the IPFS address of the\n              article?\n            </Typography>\n            <Paper className={classes.inputRoot}>\n              <InputBase\n                value={currentPageAutoLink}\n                className={classes.input}\n                placeholder=\"Search Google Maps\"\n                inputProps={{ \"aria-label\": \"search google maps\" }}\n              />\n              <IconButton className={classes.iconButton} aria-label=\"copy\">\n                <CopyToClipboard\n                  text={currentPageAutoLink}\n                  onCopy={handleClickCopy}\n                >\n                  <ContentCopy />\n                </CopyToClipboard>\n              </IconButton>\n            </Paper>\n          </div>\n        ) : null}\n      </FormGroup>\n      <Snackbar\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"left\"\n        }}\n        open={open}\n        autoHideDuration={1500}\n        onClose={handleClose}\n      >\n        <SnackBarContentWrapper\n          onClose={handleClose}\n          variant=\"success\"\n          message=\"The url has be copied!\"\n        />\n      </Snackbar>\n      <Snackbar\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"left\"\n        }}\n        open={openError}\n        autoHideDuration={2500}\n        onClose={handleCloseError}\n      >\n        <SnackBarContentWrapper\n          onClose={handleCloseError}\n          variant=\"error\"\n          message={errorMessage}\n        />\n      </Snackbar>\n    </div>\n  );\n}\n","import axios from \"axios\";\n\nexport function api(url, config) {\n  return axios(url, config)\n    .then(result => {\n      if (typeof result.data === \"object\") {\n        return JSON.stringify(result.data, null, 2);\n      } else {\n        return result.data;\n      }\n    })\n    .catch(error => {\n      if (error.response) {\n        if (error.response.data) {\n          error.message = error.response.data;\n        }\n      }\n      throw error;\n    });\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n\n  Typography,\n  Link,\n  CssBaseline,\n  Container\n} from \"@material-ui/core\";\nimport Home from \"./Home\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    flexGrow: 1,\n    minHeight: \"100vh\",\n    backgroundColor: theme.palette.background.paper\n  },\n  grow: {\n    flexGrow: 1\n  },\n  menuButton: {\n    marginRight: theme.spacing(2)\n  },\n  link: {\n    margin: theme.spacing(1)\n  },\n  title: {\n    flexGrow: 1\n  },\n  space: {\n    marginRight: theme.spacing(1),\n    marginLeft: theme.spacing(1)\n  },\n  footer: {  \n    paddingTop: theme.spacing(1),\n    paddingBottom: theme.spacing(2),\n    marginTop: \"auto\",\n    backgroundColor: \"#f2f2f2\",\n    borderTop: \"1px solid #e4e4e4\",\n    lineHeight: 40\n  },\n  flex: {\n    display: \"flex\",\n    flexWrap:'wrap',\n    justifyContent: \"center\"\n  }\n}));\n\nexport default function ButtonAppBar() {\n  const classes = useStyles();\n\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <div className={classes.root}>\n        <div className=\"sharethis-inline-share-buttons\" style={{padding:10}} />\n        <Container maxWidth=\"md\">\n          <Home />\n        </Container>\n        <footer className={classes.footer}>\n          <Container maxWidth=\"md\">\n            <div className={classes.flex}>\n              <Typography variant=\"body2\" className={classes.space}>\n                <Link\n                  color=\"textSecondary\"\n                  href=\"https://github.com/contributionls/matters2ipfs\"\n                >\n                  Github\n                </Link>\n              </Typography>\n\n              <Typography variant=\"body2\" className={classes.space}>\n                <Link\n                  color=\"textSecondary\"\n                  href=\"https://github.com/contributionls/matters2ipfs/blob/master/README.md#getting_started\"\n                >\n                  Docs\n                </Link>\n              </Typography>\n              <Typography variant=\"body2\" className={classes.space}>\n                <Link\n                  color=\"textSecondary\"\n                  href=\"https://github.com/contributionls/matters2ipfs/issues\"\n                >\n                  Feedback\n                </Link>\n              </Typography>\n              <Typography variant=\"body2\" className={classes.space}>\n                <Link\n                  color=\"textSecondary\"\n                  href=\"https://github.com/contributionls/matters2ipfs/blob/master/Terms.md\"\n                >\n                  Terms of Use\n                </Link>\n              </Typography>\n              <Typography variant=\"body2\" className={classes.space}>\n                <Link\n                  color=\"textSecondary\"\n                  href=\"https://github.com/contributionls/matters2ipfs/issues/new\"\n                >\n                  Submit Gateway\n                </Link>\n              </Typography>\n              <Typography variant=\"body2\" className={classes.space}>\n              <Link\n                color=\"textSecondary\"\n                href=\"https://matters.news/@deserve\"\n              >\n                Follow Me\n              </Link>\n            </Typography>\n            </div>\n          </Container>\n        </footer>\n      </div>\n    </React.Fragment>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport { createMuiTheme } from \"@material-ui/core/styles\";\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {main:'#0d6763'},\n    secondary:{main: '#c0a46b'}\n  }\n});\n\nfunction Root() {\n  return (\n    <ThemeProvider theme={theme}>\n      <App />\n    </ThemeProvider>\n  );\n}\nReactDOM.render(<Root />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}